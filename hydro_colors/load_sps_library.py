# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_load_sps_library.ipynb.

# %% auto 0
__all__ = ['STELLAR_LIBRARY_DIR', 'load_fsps_spectral_library', 'load_fsps_age_metallicity']

# %% ../nbs/00_load_sps_library.ipynb 3
import numpy as np
import os
import matplotlib.pylab as plt
from .load_sim_stellar_catalog import Z_SOLAR_PADOVA, H0

# %% ../nbs/00_load_sps_library.ipynb 4
STELLAR_LIBRARY_DIR = '../hydro_colors/data/sps_library_data/'

# %% ../nbs/00_load_sps_library.ipynb 5
def load_fsps_spectral_library(dirIn:str=STELLAR_LIBRARY_DIR # Input directory of the stellar spectra library 
                              ) -> tuple: #Fluxes, wavelengths 
    spec_flux = np.load(os.path.join(dirIn, "ssp_spec_flux_lines.npy"))
    spec_wave = np.load(os.path.join(dirIn, "ssp_spec_wave.npy"))
    print('Library shape: ', spec_flux.shape) 
    print('Wavelength shape: ', spec_wave.shape)
    return spec_flux, spec_wave

# %% ../nbs/00_load_sps_library.ipynb 6
def _load_fsps_age(dirIn:str=STELLAR_LIBRARY_DIR # Input directory of the stellar spectra library 
                  )-> np.array: # Age in Gyr
    log_age_gyr = np.load(os.path.join(dirIn, "log_age.npy")) - 9
    age_fsps_gyr = 10**log_age_gyr
    ## (age is in 1/H0 units)
    return age_fsps_gyr

# %% ../nbs/00_load_sps_library.ipynb 7
def _load_fsps_metallicity(dirIn:str=STELLAR_LIBRARY_DIR, # Input directory of the stellar spectra library
                           Z_solar:np.float32=Z_SOLAR_PADOVA # Solar metallicity in Padova
                          ) -> np.array: #Metallicity values in Z/Z_solar units
    Z_legend = np.load(os.path.join(dirIn, "zlegend.npy"))
    Z_padova_fsps = Z_legend/Z_solar
    return Z_padova_fsps

# %% ../nbs/00_load_sps_library.ipynb 8
def load_fsps_age_metallicity(dirIn:str=STELLAR_LIBRARY_DIR,
                              Z_solar:np.float32=Z_SOLAR_PADOVA # Solar metallicity in Padova
                             )-> tuple: # Age in Gyr, Metallicity in Z/Z_sun
    
    age_fsps_gyr = _load_fsps_age(dirIn)
    
    Z_padova = _load_fsps_metallicity(dirIn, Z_solar)
    
    return age_fsps_gyr, Z_padova
